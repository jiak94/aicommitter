name: Build
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      
      - name: Install dependencies
        run: |
          go get -v -t -d ./...
          if [ -f "go.mod" ]; then
            go mod download
          fi
      
      - name: Build for linux_amd64
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64
        run: |
          go build -ldflags="-s -w" -v -o aicommit_linux_amd64
      
      - name: Build for linux_arm64
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: arm64
        run: |
          go build -ldflags="-s -w" -v -o aicommit_linux_amd64
      
      - name: Build for darwin_amd64
        env:
          CGO_ENABLED: 0
          GOOS: darwin
          GOARCH: amd64
        run: |
          go build -ldflags="-s -w" -v -o aicommit_darwin_amd64
      
      - name: Build for darwin_arm64
        env:
          CGO_ENABLED: 0
          GOOS: darwin
          GOARCH: arm64
        run: |
          go build -ldflags="-s -w" -v -o aicommit_darwin_arm64
        
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload binaries linux_amd64
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aicommit_linux_amd64
          asset_name: aicommit_linux_amd64
          asset_content_type: application/octet-stream
      
      - name: Upload binaries linux_arm64
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aicommit_linux_arm64
          asset_name: aicommit_linux_arm64
          asset_content_type: application/octet-stream

      - name: Upload binaries darwin_arm64
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aicommit_darwin_arm64
          asset_name: aicommit_darwin_arm64
          asset_content_type: application/octet-stream
      
      - name: Upload binaries darwin_amd64
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aicommit_darwin_amd64
          asset_name: aicommit_darwin_amd64
          asset_content_type: application/octet-stream